apply plugin: 'com.android.application'
apply plugin: 'bugly'

Properties properties = new Properties()
properties.load(project.file('configs/config.properties').newDataInputStream())

bugly {
    appId = properties.getProperty("BUGLY_APPID")
    appKey = properties.getProperty("BUGLY_APPKEY")
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.3"
    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
        versionCode properties.getProperty("VERSION_CODE").toInteger()
        versionName versionName(properties)
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField("int", "DB_VERSION", properties.getProperty("DB_VERSION"))
        buildConfigField("String", "PUBLIC_KEY", properties.getProperty("PUBLIC_KEY"))
        buildConfigField("String", "WECHAT_APPID", properties.getProperty("WECHAT_APPID"))
        buildConfigField("String", "BUGLY_APPID", properties.getProperty("BUGLY_APPID"))
        buildConfigField("String", "TONGDUN_URL", properties.getProperty("TONGDUN_URL"))
        buildConfigField("String", "TONGDUN_CODE", properties.getProperty("TONGDUN_CODE"))
        buildConfigField("String", "TONGDUN_KEY", properties.getProperty("TONGDUN_KEY"))
        buildConfigField("String", "TONGDUN_APP_NAME", properties.getProperty("TONGDUN_APP_NAME"))
        buildConfigField("String", "GONGXINBAO_URL", properties.getProperty("GONGXINBAO_URL"))
        buildConfigField("String", "GONGXINBAO_APPID", properties.getProperty("GONGXINBAO_APPID"))
        buildConfigField("String", "GONGXINBAO_APPSECURITY", properties.getProperty("GONGXINBAO_APPSECURITY"))
    }
    /**
     * url  对应服务器地址
     * type 对应应用类型
     */
    flavorDimensions "url", "type"
    productFlavors {
        loan {
            dimension "type"
            applicationId "com.jiaye.cashloan"
        }
        shop {
            dimension "type"
            applicationId "com.jiaye.cashloan.shop"
        }
        urlTest {
            dimension "url"
            flavorBuildConfigField(urlTest, loadProperties('test'))
        }
        urlProduct {
            dimension "url"
            flavorBuildConfigField(urlProduct, loadProperties('product'))
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        debug {
            keyAlias 'loan'
            keyPassword 'com.jiaye.cashloan'
            storeFile file('../key')
            storePassword 'com.jiaye.cashloan'
        }
    }
    android.applicationVariants.all { variant ->
        renameApk(variant)
    }
}

repositories {
    maven { url "https://jitpack.io" }
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    api 'com.android.support:appcompat-v7:26.1.0'
    api 'com.android.support:recyclerview-v7:26.1.0'
    api 'com.android.support:design:26.1.0'
    // https://mvnrepository.com/artifact/io.reactivex.rxjava2/rxjava
    api 'io.reactivex.rxjava2:rxjava:2.1.4'
    // https://mvnrepository.com/artifact/io.reactivex.rxjava2/rxandroid
    api 'io.reactivex.rxjava2:rxandroid:2.0.1'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/retrofit
    api 'com.squareup.retrofit2:retrofit:2.3.0'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/converter-gson
    api 'com.squareup.retrofit2:converter-gson:2.3.0'
    // https://mvnrepository.com/artifact/com.squareup.retrofit2/adapter-rxjava2
    api 'com.squareup.retrofit2:adapter-rxjava2:2.3.0'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    api 'com.squareup.okhttp3:okhttp:3.9.0'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/logging-interceptor
    api 'com.squareup.okhttp3:logging-interceptor:3.9.0'
    // https://github.com/orhanobut/logger
    api 'com.orhanobut:logger:2.1.1'
    // https://github.com/Bigkoo/Android-PickerView
    api 'com.contrarywind:Android-PickerView:3.2.7'
    // https://github.com/youth5201314/banner
    api 'com.youth.banner:banner:1.4.10'
    // https://github.com/lzyzsd/JsBridge
    api 'com.github.lzyzsd:jsbridge:1.0.4'
    // wechat
    api 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:1.4.0'
    // bugly
    api 'com.tencent.bugly:crashreport:2.6.6.1'
    // module
    implementation project(':tongdun')
    implementation project(':gesturelock')
    implementation project(':takephoto')
}

static def versionName(properties) {
    return properties.getProperty("MILESTONE_CODE") + "." + properties.getProperty("CODE") + "." + properties.getProperty("FIX_CODE") + "." + properties.getProperty("VERSION_CODE")
}

def loadProperties(path) {
    Properties properties = new Properties()
    properties.load(project.file('configs/url/' + path + '/config.properties').newDataInputStream())
    return properties
}

static def flavorBuildConfigField(flavor, properties) {
    flavor.buildConfigField("String", "BASE_URL", properties.getProperty("BASE_URL"))
    flavor.buildConfigField("String", "BASE_SHARE_URL", properties.getProperty("BASE_SHARE_URL"))
    flavor.buildConfigField("String", "SATCATCHE_URL", properties.getProperty("SATCATCHE_URL"))
    flavor.buildConfigField("String", "CREDIT2GO_URL", properties.getProperty("CREDIT2GO_URL"))
    flavor.buildConfigField("String", "CREDIT2GO_ESCROW_URL", properties.getProperty("CREDIT2GO_ESCROW_URL"))
}

static def renameApk(variant) {
    variant.outputs.all {
        String fileName = outputFileName.toString()
        outputFileName = fileName.substring(0, fileName.length() - 4) + "-" + "${variant.versionName}.apk"
    }
}
